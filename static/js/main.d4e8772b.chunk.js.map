{"version":3,"sources":["pages/Home.js","components/ProjectCard.js","Photos.js","pages/Projects.js","pages/Activities.js","pages/Experiences.js","components/Gallery.js","pages/Ballpit.js","pages/Vivi.js","pages/Ipot.js","pages/Ballrobot.js","Routes.js","components/Navbar.js","App.js","registerServiceWorker.js","index.js"],"names":["CSSPage","type","duration","ProjectCard","props","reveal","to","link","class","src","photo","className","title","caption","icon","photos_ballpit","width","height","photos_vivi","photos_ipot","photos_turtle","Home","md","React","Component","LightboxGallery","openLightbox","useCallback","event","index","setCurrentImage","setViewerIsOpen","useState","currentImage","viewerIsOpen","photos","photoList","onClick","onClose","currentIndex","views","map","x","srcset","srcSet","text_body","Ballpit","window","scrollTo","center","autoplay","loop","controls","muted","Vivi","Ipot","Ballrobot","Routes","exact","path","component","Experiences","Projects","Activities","IPot","BallRobot","render","Navbar","state","collapseID","toggleCollapse","setState","prevState","closeCollapse","collID","setActive","navItemID","this","color","light","expand","fixed","scrolling","href","id","isOpen","navbar","right","placement","domElement","style","display","target","rel","fab","App","marginTop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d4e8772b.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn\n} from 'mdbreact';\n\nconst CSSPage = () => {\n  return (\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<h1>Homepage Coming Soon!</h1>\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default CSSPage;\n\n","import React from 'react';\nimport './ProjectCard.js';\nimport {\n\tMDBAnimation,\n\tMDBNavLink,\n\tMDBIcon\n} from 'mdbreact';\n\nfunction ProjectCard(props){\n\treturn (\n\t\t<>\n\t\t\t<MDBAnimation reveal type='fadeInUp'>\n\t\t\t<MDBNavLink to={props.link} >\n\t\t\t<div class =\"view overlay\">\n\t\t\t\t<img src={props.photo} class=\"img-fluid rounded-lg\"/>\n\t\t\t\t<div class=\"d-flex flex-column mask flex-center waves-effect waves-light rgba-black-strong rounded-lg\">\n\t\t\t\t\t<div class=\"m-5\">\n\t\t\t\t\t<h1 className=\"white-text display-5\">{props.title}</h1>\n\t\t\t\t\t<p1 className=\"white-text\">\n\t\t\t\t\t\t{props.caption}\n\t\t\t\t\t</p1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\n\t\t\t\t<MDBIcon className=\"m-3 caption white-text fa-3x\" icon=\"sign-in-alt\"/>\n\t\t\t</div>\n\t\t\t</MDBNavLink>\n\t\t\t\n\t\t\t</MDBAnimation>\n\t\t</>\n\t);\n}\n\nexport default ProjectCard;\n","const photos_ballpit = [\n\t{src: 'https://i.imgur.com/9clIRdl.png',width:4,height:3,title:\"screenshot of the demo at the presentation event. I'm the one in the tie!\"},\n\t{src: 'https://i.imgur.com/cOWp35a.jpg',width:4,height:3,title:\"Pushing the player limit with our friends.\"},\n\t{src: 'https://i.imgur.com/HKvhCKA.png',width:4,height:3,title:\"Screenshot of us pushing the player limit with our friends.\"},\n\t{src: 'https://i.imgur.com/lVH8u54.jpg',width:4,height:3,title:\"Testing overhead mount with our friends.\"},\n\t{src: 'https://i.imgur.com/kisJEqY.jpg',width:4,height:3,title:\"Testing projector and mounting setup. An overhead setup could work provided the Kinect is mounted higher than me standing on a chair.\"},\n];\n\nconst photos_vivi = [\n\t{src: 'https://i.imgur.com/nTVuOga.jpg',width:3,height:4,title:\"Standing proud.\"},\n\t{src: 'https://i.imgur.com/RaSf4hq.jpg',width:3,height:4,title:\"Who is that mysterious fellow?\"},\n\t{src: 'https://i.imgur.com/yMIr2Mq.jpg',width:4,height:3,title:\"The most ambitious crossover.\"},\n\t{src: 'https://i.imgur.com/wjF7aQ1.jpg',width:4,height:3,title:\"I found me!\"},\n\t{src: 'https://i.imgur.com/2zn78nc.jpg',width:4,height:3,title:\"All the electronics for the eyes.\"},\n\t{src: 'https://i.imgur.com/973iOwp.jpg',width:3,height:4,title:\"Hat skeleton.\"},\n\t{src: 'https://i.imgur.com/HllsBVc.jpg',width:4,height:3,title:\"Raw materials and humble beginnings.\"},\n\t{src: 'https://i.imgur.com/R6b6omS.jpg',width:3,height:4,title:\"Planning it all out.\"},\n];\n\nconst photos_ipot = [\n\t{src: 'https://i.imgur.com/73EhyWy.jpg',width:4,height:3,title:\"Presenting the iPot Lite.\"},\n\t{src: 'https://i.imgur.com/NagtEE1.jpg',width:4,height:3,title:\"We won Best Unconnected Hack...at a Connectivity Hackathon.\"},\n\t{src: 'https://i.imgur.com/K01u1M9.jpg',width:4,height:3,title:\"Tadah!\"},\n\t{src: 'https://i.imgur.com/rqHbrqO.jpg',width:4,height:3,title:\"Hard at work on a messy table.\"},\n\t{src: 'https://i.imgur.com/VfrlGks.jpg',width:4,height:3,title:\"Cooking videos make great accompaniment.\"},\n\t{src: 'https://i.imgur.com/81JjQHm.jpg',width:4,height:3,title:\"Thinking of all the possibilities.\"},\n];\n\nconst photos_turtle = [\n\t{src: 'https://i.imgur.com/QOOIK5N.png',width:4,height:3,title:\"The (very tired) team at the Showcase.\"},\n\t{src: 'https://i.imgur.com/f6JJCZy.jpg',width:4,height:3,title:\"Taking the robot apart after the demo. Four months to build, thirty minutes to take apart.\"},\n\t{src: 'https://i.imgur.com/RyTVpE4.jpg',width:3,height:4,title:\"From left to right: Power supply for sensors, power supply for motors, and H-bridge motor controller.\"},\n\t{src: 'https://i.imgur.com/3NfK2Mp.jpg',width:3,height:4,title:\"Testing the ultrasonic sensor's behaviour with extremely close objects.\"},\n\t{src: 'https://i.imgur.com/kPeWxHt.jpg',width:3,height:4,title:\"Testing basket/ball detection with a colour sensor. This was not very effective; the final design used ultrasonic range sensors.\"},\n\t{src: 'https://i.imgur.com/QhaqkEA.jpg',width:3,height:4,title:\"Robot frame 1.0. The width beneath the robot is only barely larger than the width of a basket, which ended up being our Achilles' Heel.\"},\n\t{src: 'https://i.imgur.com/nXVw00Y.jpg',width:4,height:3,title:\"(Very messily) Planning it out.\"},\n];\n\nexport {\n\tphotos_vivi,\n\tphotos_ballpit,\n\tphotos_ipot,\n\tphotos_turtle\n};\n\nexport default photos_vivi;\n","import React from 'react';\nimport './Projects.css'\nimport {\n  MDBEdgeHeader,\n  MDBFreeBird,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBCard,\n  MDBCardImage,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBBtn,\n  MDBNavLink\n} from 'mdbreact';\n\nimport ProjectCard from '../components/ProjectCard.js';\n\nimport {\n\tphotos_vivi, \n\tphotos_ballpit, \n\tphotos_ipot,\n\tphotos_turtle\n} from '../Photos.js';\n\nclass Home extends React.Component {\n\n  render(){\n  return (\n    <>\n\t  <MDBFreeBird className=\"freebird\">\n      <MDBAnimation type='fadeInUp' duration='1000ms'>\n\t\t  <h1 className='display-3 font-weight-bold text-center'>Projects</h1>\n\t  \t\t<h3 className='text-center'>Pictures and videos inside!</h3>\n      </MDBAnimation>\n\t  </MDBFreeBird>\n\n        <MDBContainer>\n                <MDBRow className='d-flex'>\n\n                  <MDBCol md='6'>\n\t  \t\t\t\t<ProjectCard \n\t  \t\t\t\t\tlink='/projects/vivi-cosplay' \n\t  \t\t\t\t\tphoto={photos_vivi[0].src}\n\t  \t\t\t\t\ttitle='Vivi Cosplay'\t\n\t\t\t\t\t\tcaption=\"Complete with LED-matrix eyes! I don't know why I haven't played Final Fantasy IX yet.\"\n\t  \t\t\t\t/> \n\n                  </MDBCol>\n\n                  <MDBCol md='6'>\n\n\t  \t\t\t\t<ProjectCard \n\t  \t\t\t\t\tlink='/projects/virtual-ballpit' \n\t  \t\t\t\t\tphoto={photos_ballpit[0].src}\n\t  \t\t\t\t\ttitle='Virtual Ball Pit'\t\n\t\t\t\t\t\tcaption=\"For ball-pit-loving germaphobes everywhere.\"\n\t  \t\t\t\t/> \n\t  \t\t\t\n\n\t  \t\t\t\t<ProjectCard \n\t  \t\t\t\t\tlink='/projects/ipot-lite' \n\t  \t\t\t\t\tphoto={photos_ipot[0].src}\n\t  \t\t\t\t\ttitle='iPot Lite'\t\n\t  \t\t\t\t\tcaption=\"A sunlight-chasing pot for a sunlight-hungry plant. It's very allergic to water, unlike its earthy inhabitant.\"\n\t  \t\t\t\t/> \n\n\t  \t\t\t\t<ProjectCard \n\t  \t\t\t\t\tlink='/projects/turtle-ball-dispensing-robot' \n\t  \t\t\t\t\tphoto={photos_turtle[0].src}\n\t  \t\t\t\t\ttitle=\"'Turtle' Ball-Dispensing Bot\"\n\t  \t\t\t\t\tcaption=\"If you squint, it sort of looks like a turtle.\"\n\t  \t\t\t\t/> \n\t  \t\t\t\t\n                  </MDBCol>\n\n\t  \t\t\t</MDBRow>\n\t  \t\t\t\n\t\t\t\t<MDBAnimation reveal type='fadeInUp'>\n\t\t\t\t\t<h1 className='mt-3 mb-5 text-center'>More to come!</h1>\n\t\t\t\t</MDBAnimation>\n        </MDBContainer>\n    </>\n  );\n};\n}\n\nexport default Home;\n\n","import React from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn\n} from 'mdbreact';\n\nconst CSSPage = () => {\n  return (\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<h1>Activities Coming Soon!</h1>\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default CSSPage;\n\n\n","import React from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn\n} from 'mdbreact';\n\nconst CSSPage = () => {\n  return (\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<h1>Experiences Coming Soon!</h1>\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default CSSPage;\n\n\n","import React, {useState, useCallback} from 'react';\nimport Gallery from 'react-photo-gallery';\nimport Carousel, {Modal, ModalGateway} from 'react-images';\n\nfunction LightboxGallery(props){\n\tconst openLightbox = useCallback((event, { photo, index }) => {\n\t\tsetCurrentImage(index);\n\t\tsetViewerIsOpen(true);\n\t  }, []);\n\n\t  const closeLightbox = () => {\n\t\tsetCurrentImage(0);\n\t\tsetViewerIsOpen(false);\n\t  };\n\n\tconst [currentImage, setCurrentImage] = useState(0);\n\tconst [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t<Gallery photos={props.photoList} onClick={openLightbox}/>\n\t\t<ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={props.photoList.map(x => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n\t  </>\n\t);\n};\n\nexport default LightboxGallery;\n","import React, {useState, useCallback} from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardImage,\n  MDBCardText\n} from 'mdbreact';\nimport LightboxGallery from '../components/Gallery.js'\n\nimport {photos_ballpit as photos} from '../Photos.js'\n\nconst text_body = (\n<>\n<p>(C#, Box2D, SMFL Graphics)</p>\n\n<p className=\"text-left\">The best part of it all was watching people play and have fun with what I created. I wonder if this is how game developers feel…</p>\n\n<p className=\"text-left\">The inspiration for the project was my engineering design course, in which my team was tasked with improving the hygiene of childrens’ waiting room toys at a pediatric clinic. The problem was that toys were required to calm children down, but led to cross-contamination when sick children played with them. </p>\n\n<p className=\"text-left\">Most other teams decided to improve the cleaning process with fancy dishwashers and the like, but our team eliminated the root of the problem. What if we made a toy that you don’t touch?</p>\n\n<p className=\"text-left\">And so, as the team’s developer, I borrowed a Kinect and a projector, and got to work. I started with a Kinect depth-sensor demo in C#, added the Box2D physics engine to add balls to play with, and used SMFL for rendering the balls. </p>\n\n<p className=\"text-left\">The most difficult part was having the balls bounce off of a player’s silhouette. Since the silhouette is always transforming, creating a collision object that matches its shape is a challenge. </p>\n\n<p className=\"text-left\">My solution was to map a collision object to each 16x16 area which is activated when the player’s silhouette covers the area. This was a computationally-simple method of having players interact with the balls, but since the player collision objects were static, players could not swipe their hand to accelerate the ball, only reflect it. I’d definitely like to revisit this; being able to swing your arm at a ball would have been a lot of fun!</p>\n\n<p className=\"text-left\">The project was never implemented at the pediatric clinic, which is entirely understandable. The final product was graphically rough, and had not much else to do but bounce balls. That said, presenting at the showcase, and watching people legitimately have fun with something I created was more than fulfilling enough. </p>\n</>\n);\n\nfunction Ballpit() {\n  return (\n\t  window.scrollTo(0,0),\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<MDBRow className=\"m-2\">\n              <MDBCol\n                md='12'\n                className='mx-auto float-none white z-depth-1 py-2 px-2'\n              >\n                <MDBCardBody className='text-center'>\n                  <h1 className='h1-responsive mb-4'>\n                    <strong className='font-weight-bold'>\n\t  \t\t\t\t\tVirtual Ball Pit\n                    </strong>\n                  </h1>\n                  <MDBRow />\n\t  \t\t\t\t{text_body}\n                </MDBCardBody>\n\t  \t\t</MDBCol>\n\t  \t</MDBRow>\n\n\t  \t<MDBRow center className=\"m-2 text-center\">\n\t  \t<MDBCol md='12'>\n\t\t<video class=\"video-fluid z-depth-1\" autoplay loop controls muted>\n\t\t  <source src=\"https://i.imgur.com/AiPdR2H.mp4\" type=\"video/mp4\" />\n\t\t</video>\n\t  \t</MDBCol>\n\t  \t</MDBRow>\n\n\n\t  \t<LightboxGallery photoList={photos}/>\n\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default Ballpit;\n","import React, {useState, useCallback} from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardImage,\n  MDBCardText\n} from 'mdbreact';\nimport LightboxGallery from '../components/Gallery.js'\n\nimport {photos_vivi as photos} from '../Photos.js'\n\nconst text_body = ( \n\t<>\n<p>(Arduino, Addressable LED Matrices, Tailoring?)</p>\n\n<p className=\"text-left\">Bringing this to Anime North 2019 is quite possibly the closest I’ll ever be to being a celebrity. I can’t even count how many times people asked me to take pictures with them that day…</p>\n\n<p className=\"text-left\">I wanted to do something creative with my experience in electronics, and cosplay seemed like a great place to start. I was inspired by the cosplay builds of Mythbusters’ Adam Savage, who seemed to have a lot of fun with his technical know-how.</p>\n\n<p className=\"text-left\">Final Fantasy’s Vivi/Black Mage was the perfect character. Not only is he well-known (I haven’t even played FFIX and I’m familiar), his shadowed face and glowing eyes create the perfect opportunity for addressable LEDs.</p>\n\n<p className=\"text-left\">I’m glad to report that my Arduino and electronics experience made the eyes really easy to make. I mounted LED matrices to the bottom of cheap sunglasses without the lenses, and powered/programmed them with an Arduino powered by a 9V battery. To change the eye type, I created a little button-pad that I could hide inside my glove. The final effect was even better than I imagined (demo below)!</p>\n\n<p className=\"text-left\">I’m unhappy to report that my lack of tailoring experience made the rest of the outfit a nightmare. Thrift-store hunting for base clothing went alright, but as it turns out, most places don’t sell comically-oversized yellow mage hats, among other things. You really can learn anything on Youtube these days; The proof is in my fantasy pants and sewing needle wounds. The hardest part by far was sewing a wireframe into the cape and the hat frame. Oh, did I mention that I don’t have a sewing machine?</p>\n\n<p className=\"text-left\">It was all totally worth it though.</p>\n\n<p className=\"text-left\">I can’t tell you how many times people came up to me, gushed about their love for Vivi, and asked to take a picture with me. I was getting stopped for pictures constantly, much to the annoyance of my friends. The worst part of it all was not being able to breath, as one might expect from wearing a black sack over their head in a hot convention center.</p>\n\n<p className=\"text-left\">I repeat - totally worth it. If you’ve ever had the slightest interest, I highly recommend trying cosplay. It’s by far the most unique fruit of my labour.</p>\n\t</>\n);\n\n\nfunction Vivi() {\n  return (\n\t  window.scrollTo(0,0),\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<MDBRow className=\"m-2\">\n              <MDBCol\n                md='12'\n                className='mx-auto float-none white z-depth-1 py-2 px-2'\n              >\n                <MDBCardBody className='text-center'>\n                  <h1 className='h1-responsive mb-4'>\n                    <strong className='font-weight-bold'>\n\t  \t\t\t\t\tVivi Cosplay\n                    </strong>\n                  </h1>\n                  <MDBRow />\n\t  \t\t\t\t{text_body}\t\n                </MDBCardBody>\n\t  \t\t</MDBCol>\n\t  \t</MDBRow>\n\n\t  \t<MDBRow center className=\"m-2\">\n\t  \t<MDBCol md='4'>\n\t\t<video class=\"video-fluid z-depth-1\" autoplay loop controls muted>\n\t\t  <source src=\"https://i.imgur.com/cRzcRYl.mp4\" type=\"video/mp4\" />\n\t\t</video>\n\t  \t</MDBCol>\n\n\t  \t<MDBCol md='4'>\n\t\t<video class=\"video-fluid z-depth-1\" autoplay loop controls muted>\n\t\t  <source src=\"https://i.imgur.com/xjiT0U7.mp4\" type=\"video/mp4\" />\n\t\t</video>\n\t  \t</MDBCol>\n\t  \t</MDBRow>\n\n\n\t  \t<LightboxGallery photoList={photos}/>\n\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default Vivi;\n","import React, {useState, useCallback} from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardImage,\n  MDBCardText\n} from 'mdbreact';\nimport LightboxGallery from '../components/Gallery.js'\n\nimport {photos_ipot as photos} from '../Photos.js'\n\nconst text_body = (\n\t<>\n<p>(Raspberry Pi/Linux, Computer Vision, Lots of sensors)</p>\n\n<p className=\"text-left\">Do you know any forgetful plant owners in your life? Do they leave their plants near the window, only for the sunlight to change direction throughout the day and starve the plant of energy? Do they forget to water it too?</p>\n\n<p className=\"text-left\">Presenting the iPot Lite - a smart plant pot that follows lite (pun intended) and designated water sources.</p>\n\n<p className=\"text-left\">This was my team’s project for MakeUofT 2020, Canada’s largest hardware hackathon hosted by IEEE’s University of Toronto student branch. The focus of the hackathon was Connectivity, and it gives me much amusement to say that we won the award for The Best Unconnected Hack at a Connectivity hackathon. </p>\n\n<p className=\"text-left\">I have plenty of experience setting up Linux devices, so I’m generally in charge of setting up the Linux environment and peripherals when doing hackathon projects with a team. My main task was setting up the Raspberry Pi with a Pi Camera to have it track and follow predefined water source symbols at regular time intervals, as well as setting up the master-slave interface between it and an Arduino.</p>\n\n<p className=\"text-left\">The Pi Camera will regularly look for a water source symbol. When it finds one, it tells the Arduino to drive the motors in the direction of the symbol. When not looking for water, the Arduino is in control, using floor-facing ultrasonic sensors and photosensors to detect light and ledges. </p>\n\n<p className=\"text-left\">I still can’t believe my team built it all in one night. Not only did it have all the features we wanted it to, it did it with elegance. </p>\n\n<p className=\"text-left\">It’s also really cute!</p>\n\n\t</>\n);\n\nfunction Ipot() {\n  return (\n\t  window.scrollTo(0,0),\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<MDBRow className=\"m-2\">\n              <MDBCol\n                md='12'\n                className='mx-auto float-none white z-depth-1 py-2 px-2'\n              >\n                <MDBCardBody className='text-center'>\n                  <h1 className='h1-responsive mb-4'>\n                    <strong className='font-weight-bold'>\n\t  \t\t\t\t\tiPot Lite\n                    </strong>\n                  </h1>\n                  <MDBRow />\n\t  \t\t\t\t{text_body}\n                </MDBCardBody>\n\t  \t\t</MDBCol>\n\t  \t</MDBRow>\n\n\t  \t<MDBRow center className=\"m-2 text-center\">\n\t  \t<MDBCol md='12'>\n\t\t<video class=\"video-fluid z-depth-1\" autoplay loop controls muted>\n\t\t  <source src=\"https://i.imgur.com/Dx0fTkh.mp4\" type=\"video/mp4\" />\n\t\t</video>\n\t  \t</MDBCol>\n\n\t  \t</MDBRow>\n\n\n\t  \t<LightboxGallery photoList={photos}/>\n\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default Ipot;\n","import React, {useState, useCallback} from 'react';\nimport {\n  MDBEdgeHeader,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBJumbotron,\n  MDBIcon,\n  MDBAnimation,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardImage,\n  MDBCardText\n} from 'mdbreact';\nimport LightboxGallery from '../components/Gallery.js'\n\nimport {photos_turtle as photos} from '../Photos.js'\n\nconst text_body = (\n<>\n<p>(C-based Microcontroller, Arduino, Sensors, PID feedback controllers)</p>\n\n<p className=\"text-left\">If there’s anything I’ve gained from building this robot, it’s a strong belief in Murphy’s Law - Everything that can go wrong, will go wrong. Engineering is just the endless struggle to design things that have as few things that can go wrong as possible.</p>\n\n<p className=\"text-left\">This is my final project for the infamous AER201 Robot Design course, one of the hallmark projects of the Engineering Science undergraduate program at the University of Toronto. My team’s project was to design an autonomous robot that traverses a line of sideways baskets (openings facing both left and right), and put a ball inside if there isn’t already a ball. It sounds pretty simple until you consider that there is no black line to follow to go straight, and that the robot and circuit controllers have to be made from scratch.</p>\n\n<p className=\"text-left\">My team decided that the most efficient design would be to carry the balls in a gumball-machine fashion, drive over the baskets, and drop balls down chutes when an empty basket is in between. Even now, I think our idea is great, but practice is rarely ever as great as theory.</p>\n\n<p className=\"text-left\">My main role was designing the circuits to control and power the motors and the sensors. I soldered a power supply for the motors, 12V-to-5V power supply for the basket-detection ultrasonic sensors, and a modified H-bridge motor controller to control speed and direction as well as calibrate the robot to drive straight</p>\n\n<p className=\"text-left\">All the problems appeared when we were integrating. It’s really hard to make a robot drive straight without a line to follow. Everything from the alignment of the frame, to the manufacturing differences in identical motors, to the motor-controlling software caused huge headaches.</p>\n\n<p className=\"text-left\">I ended up joining in on the software effort, adding a gyroscope to detect changes in heading, and implementing an Arduino PID feedback controller to drive even remotely straight. It worked pretty well, but pretty well wasn’t good enough</p>\n\n<p className=\"text-left\">It wasn’t until near the end of the project that we realized that the clearance for a basket beneath our robot required that we drive nearly perfectly straight, which was practically impossible. Our robot was disqualified spectacularly when it drove at a slight angle and pushed a basket out of place.</p>\n\n<p className=\"text-left\">I learned a lot from this project, but the most important thing is Murphy’s Law. We should have integrated every tiny step along the way to find these issues and design to maximize tolerances for imperfections. Nothing in real-life is perfect, so we shouldn’t be designing while assuming it will be.</p>\n</>\n);\n\nfunction Ballrobot() {\n  return (\n\t  window.scrollTo(0,0),\n    <>\n      <MDBAnimation type='zoomIn' duration='500ms'>\n      <MDBContainer>\n\t  \t<MDBRow className=\"m-2\">\n              <MDBCol\n                md='12'\n                className='mx-auto float-none white z-depth-1 py-2 px-2'\n              >\n                <MDBCardBody className='text-center'>\n                  <h1 className='h1-responsive mb-4'>\n                    <strong className='font-weight-bold'>\n\t  \t\t\t\t\t'Turtle' Ball-Dispensing Robot\n                    </strong>\n                  </h1>\n                  <MDBRow />\n\t  \t\t\t\t{text_body}\n                </MDBCardBody>\n\t  \t\t</MDBCol>\n\t  \t</MDBRow>\n\n\t  \t<LightboxGallery photoList={photos}/>\n\n      </MDBContainer>\n      </MDBAnimation>\n    </>\n  );\n};\n\nexport default Ballrobot;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Projects from './pages/Projects';\nimport Activities from './pages/Activities';\nimport Experiences from './pages/Experiences';\n\n//projects\nimport Ballpit from './pages/Ballpit.js';\nimport Vivi from './pages/Vivi.js';\nimport IPot from './pages/Ipot.js';\nimport BallRobot from './pages/Ballrobot.js';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/experiences' component={Experiences} />\n        <Route exact path='/projects' component={Projects} />\n        <Route exact path='/activities' component={Activities} />\n\n\t\t//projects\n        <Route path='/projects/virtual-ballpit' component={Ballpit} />\n        <Route path='/projects/vivi-cosplay' component={Vivi} />\n        <Route path='/projects/ipot-lite' component={IPot} />\n        <Route path='/projects/turtle-ball-dispensing-robot' component={BallRobot} />\n        <Route\n          render={function() {\n            return <h1>Not Found</h1>;\n          }}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React from 'react';\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n  MDBFooter,\n  MDBNavLink,\n  MDBTooltip,\n  MDBContainer,\n  MDBIcon\n} from 'mdbreact';\n\n\nclass Navbar extends React.Component {\n  state = {\n    collapseID: ''\n  };\n\n  toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n    }));\n\n  closeCollapse = collID => () => {\n    const { collapseID } = this.state;\n    window.scrollTo(0, 0);\n    collapseID === collID && this.setState({ collapseID: '' });\n  };\n\n  setActive = navItemID=> () => {\n  };\n\n\trender(){\n\n    const overlay = (\n      <div\n        id='sidenav-overlay'\n        style={{ backgroundColor: 'transparent' }}\n        onClick={this.toggleCollapse('mainNavbarCollapse')}\n      />\n    );\n\n    const { collapseID } = this.state;\n\n\t\treturn(\n          <MDBNavbar className=\"shadow-none\" color='white' light expand='md' fixed='top' scrolling>\n            <MDBNavbarBrand href='/' className='py-0 font-weight-bold' onClick={this.closeCollapse('mainNavbarCollapse')}>\n              <h2 className='align-middle'>Hi, I'm Dylan!</h2>\n            </MDBNavbarBrand>\n            <MDBNavbarToggler\n              onClick={this.toggleCollapse('mainNavbarCollapse')}\n            />\n            <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\n\n\t\t\t<MDBContainer>\n              <MDBNavbarNav>\n\n                <MDBNavItem>\n                  <MDBNavLink\n                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                    to='/experiences'\n                  >\n                    <h3>Experiences</h3>\n                  </MDBNavLink>\n                </MDBNavItem>\n\n                <MDBNavItem>\n                  <MDBNavLink\n                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                    to='/projects'\n                  >\n                    <h3>Projects</h3>\n                  </MDBNavLink>\n                </MDBNavItem>\n\n                <MDBNavItem>\n                  <MDBNavLink\n                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                    to='/activities'\n                  >\n                    <h3>Activities</h3>\n                  </MDBNavLink>\n                </MDBNavItem>\n\n              </MDBNavbarNav>\n\t\t\t</MDBContainer>\n                \n\t\t\t\t  <MDBNavbarNav right>\n\t\t\t\t<div className=\"d-flex flex-row\">\n                <MDBNavItem>\n                  <MDBTooltip\n                    placement='bottom'\n                    domElement\n                    style={{ display: 'block' }}\n                  >\n                    <a\n                      className='nav-link Ripple-parent'\n                      href='https://www.linkedin.com/in/dylanhhdao/'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <strong>\n                        <MDBIcon fab icon='linkedin-in' />\n                      </strong>\n                    </a>\n                    <span>LinkedIn</span>\n                  </MDBTooltip>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBTooltip\n                    placement='bottom'\n                    domElement\n                    style={{ display: 'block' }}\n                  >\n                    <a\n                      className='nav-link Ripple-parent'\n                      href='https://github.com/dylandao99'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <strong>\n                        <MDBIcon fab icon='github' />\n                      </strong>\n                    </a>\n                    <span>GitHub</span>\n                  </MDBTooltip>\n                </MDBNavItem>\n                <MDBNavItem className='mr-2'>\n                  <MDBTooltip\n                    placement='bottom'\n                    domElement\n                    style={{ display: 'block' }}\n                  >\n                    <a\n                      className='nav-link Ripple-parent'\n                      href='https://github.com/dylandao99/dylandao_resume/blob/master/dao_dylan_resume.pdf'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <strong>\n                        <MDBIcon icon='file' />\n                      </strong>\n                    </a>\n                    <span>Resume</span>\n                  </MDBTooltip>\n                </MDBNavItem>\n\t\t\t\t</div>\n              </MDBNavbarNav>\n            </MDBCollapse>\n          </MDBNavbar>\n\t\t);\n\t}\n}\n\nexport default Navbar\n","import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBRow, MDBEdgeHeader, MDBFooter} from \"mdbreact\";\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport Navbar from './components/Navbar';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n\t<Router>\r\n\t  <main style={{ marginTop: '3rem' }}>\r\n\t\t<Navbar />\r\n\t\t<MDBEdgeHeader color='indigo lighten-4' className='sectionPage' />\r\n\t\t<Routes />\r\n\t  </main>\r\n\t</Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}